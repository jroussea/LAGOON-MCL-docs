Command line option
===================

LAGOON-MCL parameters
---------------------

``--projectName <str>``
~~~~~~~~~~~~~~~~~~~~~~~

Default: ``LAGOON-MCL``

| Name of the project il est utilisé comme nom pour le dossier 
  contenant les fichiers temporaire.
| It can be retrieved from the folder: ``workdir/$projectName``

.. code-block:: shell

  # Example
  --projectName lagoon-mcl

``--outdir <path>``
~~~~~~~~~~~~~~~~~~~

Default: ``"$baseDir/results"``

Path to the folder containing the results. This folder will contain 
all LAGOON-MCL output files and folders.

.. code-block:: shell

  # Example
  --outdir path/to/folder/results

``--fasta <path>``
~~~~~~~~~~~~~~~~~~

Path to fasta files. It is necessary to indicate the name of the 
FASTA file. If there are several files use ``*.extension``.

.. code-block:: shell
    
    # Example: 
    --fasta "tests/full/tr_files_test/*.fasta"

``--annotation <path>``
~~~~~~~~~~~~~~~~~~~~~~~

Path to sequence annotation files. You should not specify the name 
of the file(s) but only the name of the folder containing the files.

.. code-block:: shell

  # Example
  --annotation "tests/full/an_files_test/*.tsv"

.. warning::

  | For the ``--fasta`` and ``--annotation`` options, it is 
    necessary to surround the paths with double quotation marks 
    ``” ... “``. This allows NextFlow to take ``*`` asterisks 
    into account.
  | For more information, see the `NextFlow documentation. <https://www.nextflow.io/docs/latest/cli.html#pipeline-parameters>`_

``--pep_colname <str>``
~~~~~~~~~~~~~~~~~~~~~~~

Name of the column containing the sequence names in the annotation file(s). 

.. code-block:: shell

  # Example
  --pep_colname peptides

``--columns_attributes <list>``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

| This command is used to select the columns to be used as 
  labels when building clusters.
| It uses a list where each column is separated by a comma ``,``.

.. code-block:: shell

  # Example
  --columns_attributes identifiant,interproscan,go

.. tip:: 

   | If two columns are linked, for example the database column 
     (contains the names of the databases: Pfam, CATH, ...) 
     and the identifier (contains the identifiers specific to 
     the databases) it is necessary to separate them by ``-``.
   | Example: ``--columns_attributes database-identifiant,interproscan``

``--concat_fasta <str>``
~~~~~~~~~~~~~~~~~~~~~~~~

Default: ``all_sequences``

Name of the file that will contain all the fasta sequences.

.. code-block:: shell

  # Example
  --outdir all_sequences

``--information <true or false>``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Default: ``false``

Specify ``true`` if you have a ``TSV`` file which contains information 
that applies to all sequences in a file.

.. note:: 
  If ``true``, the ``--information_files`` and 
  ``--information_attributes`` parameters must be used.

``--information_fils <path>``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Mandatory if ``--information true``

| Path to the TSV file containing general information about each 
  FASTA file. One line in the TSV file corresponds to one 
  FASTA file. 
| Example: if you have 30 FASTA files containing the genomes of 
  30 different species (1 file = 1 species) then the TSV file will 
  contain 30 lines. For example, each line can correspond to the 
  taxonomy of each species. 
| The purpose of this file is to apply all the information it 
  contains to the entire fasta file. This avoids putting them in 
  annotation files and potentially having many lines with a lot 
  of missing information (in the event that these lines or sequences 
  have not been functionally annotated).

.. code-block:: shell

  # Example
  --information_fils path/to/information/file/file.tsv

.. warning::

    The first column contains the FASTA file name 
    (without the ``.fasta`` extension).

.. warning:: 
    
    It is possible to specify only one TSV file with this option 

``--information_attributes <list>``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Mandatory if ``--information true``

This option is identical to the ``--columns_attributes`` option.
For more information, see ``--columns_attributes``.

Diamond parameters
------------------

``--run_diamond <true or false>``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Default: ``true``

If ``false``, use parameter ``--diamond`` (to supply the alignment file). 
Parameters ``--diamond_db``, ``--matrix``, ``--sensitivity`` and 
``--diamond_evalue`` are not used.

* ``--diamond <str or path>``

Default: ``diamond_alignment.tsv``

| Name of the file containing the alignments generated by Diamond BLASTp.
| If you've used the ``--run_diamond false`` command, then this option will 
  allow you to specify the path to your alignment file.

.. code-block:: shell

  # Example
  --diamond path/to/file/blast_alignment.tsv

``--sensitivity <str>``
~~~~~~~~~~~~~~~~~~~~~~~

Default: ``sensitive``

.. list-table:: Diamond sensitivity setting

    * - fast
      - mid-sensitive
      - more-sensitive
      - very-sensitive
      - sensitive
      - ultra-sensitive

.. code-block:: shell

  # Example
  --sensitivity sensitive

For more information, see the `Diamond documentation <https://github.com/
bbuchfink/diamond/wiki/3.-Command-line-options#sensitivity-modes>`_ .

``--matrix <str>``
~~~~~~~~~~~~~~~~~~

Default: ``BLOSUM62``

.. list-table:: Matrix used for alignment

    * - BLOSUM45
      - BLOSUM50
      - BLOSUM62
      - BLOSUM80
      - BLOSUM90
      - PAM250
      - PAM70
      - PAM30


.. code-block:: shell

  # Example
  --matrix BLOSUM62

For more information, see the `Diamond documentation <https://github.com/bbuchfink/diamond/wiki/3.-Command-line-options#alignment-options>`__.

``--diamond_evalue <int>``
~~~~~~~~~~~~~~~~~~~~~~~~~~

Default: ``0.001``

Evalue used by diamond blastp. 

For more information, see the `Diamond documentation <https://github.com/bbuchfink/diamond/wiki/3.-Command-line-options#output-options>`__.

MCL parameters
--------------

``--run_mcl <true or false>``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Default: ``true``

Running Markov CLustering algorithm.

.. tip::

  you can use ``--run_mcl false`` if you want to pre-test 
  different parameters for Diamond BLASTp.


``--I <list>``
~~~~~~~~~~~~~~

Default: ``1.4,2,4``

| List of the different inflations parameters you want to use for clustering. 
  Each parameter must be separated by a comma ``,``.
| It is also possible to specify foats, the decimal separator 
  must be a dot, for example: 1.4.

For more information, see the `MCL documentation <https://micans.org/mcl/>`__.

.. note:: 

  You can compare each clustering with the different scores provided by LAGOON-MCL, 
  in particular the homogeneity score, which is calculated for 
  each attribute provided with the options: ``--columns_attributes`` 
  and ``--information_attributes``.

``--max_weight <float>``
~~~~~~~~~~~~~~~~~~~~~~~~

Default: ``350``

Maximum weight for edges. This allows you to avoid having stops 
with infinite weight. Because the values are transformed into negative 
log 10.